#DATABASE
#Database
spring.datasource.url=jdbc:mysql://localhost:3306/cm?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#DB Username
spring.datasource.username=root
#DB Password
spring.datasource.password=admin
#Action after start app
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
spring.jpa.hibernate.dialect.storage_engine=innodb
#hibernate.dialect.storage_engine=innodb

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.testOnBorrow=true
spring.datasource.tomcat.time-between-eviction-runs-millis=3600000
spring.datasource.tomcat.validation-query=SELECT 1
#spring.datasource.testWhileIdle = true
#spring.datasource.timeBetweenEvictionRunsMillis = 3600000
#spring.datasource.validationQuery = SELECT 1

#Show Hibernate Logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.hibernate.naming-strategy= org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.id.new_generator_mappings = false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.security.user.name=admin
spring.security.user.password=admin

spring.queries.users-query=select username, password from employee where username=?
spring.queries.roles-query=select u.username, r.role from employee u inner join employee_role er on(u.id_user=er.employee_id) inner join role r on(er.role_id=r.id_role) where u.username=?

#Mail Properties
spring.mail.host = example.example
spring.mail.port = 25

